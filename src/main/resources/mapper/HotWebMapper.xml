<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.blockchain.wallet.mapper.HotWebMapper">
  <resultMap id="BaseResultMap" type="org.blockchain.wallet.entity.HotWeb">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="star" jdbcType="VARCHAR" property="star" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, url, title, introduction, image_url, star, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hot_web
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectBySelective" parameterType="org.blockchain.wallet.entity.HotWeb" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from hot_web
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hot_web
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.blockchain.wallet.entity.HotWeb">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hot_web (url, title, introduction, 
      image_url, star, create_time, 
      update_time)
    values (#{url,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, 
      #{imageUrl,jdbcType=VARCHAR}, #{star,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.blockchain.wallet.entity.HotWeb">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hot_web
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="url != null">
        url,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="star != null">
        star,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="star != null">
        #{star,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.blockchain.wallet.entity.HotWeb">
    update hot_web
    <set>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="star != null">
        star = #{star,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.blockchain.wallet.entity.HotWeb">
    update hot_web
    set url = #{url,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      star = #{star,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>